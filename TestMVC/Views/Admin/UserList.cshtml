@{
    ViewBag.User = "UserList";
    var F = @Html.F();
}

@model IEnumerable<TestMVC.Models.User>

@{
    var PagingInfo = ViewBag.PagingInfo as TestMVC.Models.PagingInfoViewModel;
}


@section body {

    @(F.Panel().ID("Panel1").BodyPadding(5).ShowBorder(false).Layout(LayoutType.VBox).ShowHeader(false).Title("用户管理").IsViewPort(true)
        .Items(
            F.Form().ID("Form2").ShowHeader(false).ShowBorder(false)
                .Rows(
                    F.FormRow().ID("FormRow1")
                        .Items(
                            F.TwinTriggerBox().ID("ttbSearchMessage").ShowLabel(false).EmptyText("在用户名称中搜索").Trigger1Icon(TriggerIcon.Clear).Trigger2Icon(TriggerIcon.Search).ShowTrigger1(false).OnTrigger2Click(Url.Action("UserList_DoPostBack"), "Panel1", new Parameter("actionType", "trigger2", ParameterMode.String)).OnTrigger1Click(Url.Action("UserList_DoPostBack"), "Panel1", new Parameter("actionType", "trigger1", ParameterMode.String)),
                            F.RadioButtonList().ID("rblEnableStatus").OnSelectedIndexChanged(Url.Action("UserList_DoPostBack"), "Panel1").Label("启用状态").ColumnNumber(3)
                                .Items(
                                    F.RadioItem().Text("全部").Selected(true).Value("all"),
                                    F.RadioItem().Text("启用").Value("enabled"),
                                    F.RadioItem().Text("禁用").Value("disabled")
                                )
                        )
                ),
            F.Grid().ID("Grid1").BoxFlex(1).ShowBorder(true).ShowHeader(false).EnableCheckBoxSelect(false).DataIDField("ID").DataTextField("Name").AllowSorting(true).OnSort(Url.Action("UserList_DoPostBack"), "Panel1").AllowPaging(true).IsDatabasePaging(true).OnPageIndexChanged(Url.Action("UserList_DoPostBack"), "Panel1")
                .Columns(
                    F.RowNumberField().EnablePagingNumber(true),
                    F.RenderFieldFor(m => m.Name, true).Width(100),
                    F.RenderFieldFor(m => m.ChineseName, true).Width(100),
                    F.RenderCheckFieldFor(m => m.Enabled, true).RenderAsStaticField(true).Width(50),
                    F.RenderFieldFor(m => m.Gender, true).Width(50),
                    F.RenderFieldFor(m => m.Email, true).Width(180),
                    F.RenderFieldFor(m => m.Remark, true).ExpandUnusedSpace(true),
                    F.RenderField().HeaderText("").EnableHeaderMenu(false).EnableColumnHide(false).RendererFunction("renderActionView").Width(50),
                    F.RenderField().HeaderText("").EnableHeaderMenu(false).EnableColumnHide(false).RendererFunction("renderActionPassword").Width(50),
                    F.RenderField().HeaderText("").EnableHeaderMenu(false).EnableColumnHide(false).RendererFunction("renderActionEdit").Width(50),
                    F.RenderField().HeaderText("").EnableHeaderMenu(false).EnableColumnHide(false).RendererFunction("renderActionDelete").Width(50)
                )
                .PageItems(
                    F.ToolbarSeparator().ID("ToolbarSeparator3"),
                    F.ToolbarText().ID("ToolbarText1").Text("每页记录数："),
                    F.DropDownList().ID("ddlGridPageSize").Width(80).OnSelectedIndexChanged(Url.Action("UserList_DoPostBack"), "Panel1", new Parameter("actionType", "changeGridPageSize", ParameterMode.String))
                        .SelectedValue(PagingInfo.PageSize.ToString())
                        .Items(
                            F.ListItem().Text("10").Value("10"),
                            F.ListItem().Text("20").Value("20"),
                            F.ListItem().Text("50").Value("50"),
                            F.ListItem().Text("100").Value("100")
                        )
                )
                .Toolbars(
                    F.Toolbar().ID("Toolbar1").Position(ToolbarPosition.Top)
                        .Items(
                            F.Button().ID("btnDeleteSelected").Icon(Icon.Delete).Text("删除选中记录").Enabled(ViewBag.CoreUserDelete).Listener("click", "onDeleteSelectedClick"),
                            F.ToolbarSeparator(),
                            F.Button().ID("btnChangeEnableUsers").Icon(Icon.GroupEdit).Text("设置启用状态").Enabled(ViewBag.CoreUserEdit)
                                .Menu(F.Menu()
                                    .Items(
                                        F.MenuButton().ID("btnEnableUsers").Listener("click", "onEnableUsersClick").Text("启用选中记录"),
                                        F.MenuButton().ID("btnDisableUsers").Listener("click", "onDisableUsersClick").Text("禁用选中记录")
                                    )
                                ),
                            F.ToolbarFill(),
                            F.Button().ID("btnNew").Icon(Icon.Add).Text("新增用户").Listener("click", "onNewClick").Enabled(ViewBag.CoreUserNew),
                            F.Button().Text("TestBindGrid").OnClick(Url.Action("TestBindGridOnClick"), new Parameter("gridItem", "getGridConfig('Grid1')", ParameterMode.Script))                        
                        )
                ).SortField(PagingInfo.SortField).SortDirection(PagingInfo.SortDirection).PageSize(PagingInfo.PageSize).RecordCount(PagingInfo.RecordCount).DataSource(Model)
            )
    )

    @(F.Window().ID("Window1").IsModal(true).Hidden(true).Target(Target.Top).EnableResize(true).EnableMaximize(true).EnableIFrame(true).Width(900).Height(600).OnClose(Url.Action("UserList_DoPostBack"), "Panel1"))
                                                                                     
}


@section script {
    <script src="~/res/js/GridHelp.js"></script>
    <script>

    var coreUserEdit = @Convert.ToString(ViewBag.CoreUserEdit).ToLower();                                                      
    var coreUserDelete = @Convert.ToString(ViewBag.CoreUserDelete).ToLower();
    var coreUserChangePassword = @Convert.ToString(ViewBag.CoreUserChangePassword).ToLower();


    function onNewClick(event) {
        F.ui.Window1.show('@Url.Content("~/Admin/UserNew")', '新增');
    }

    function renderActionView(value, params) {
        var imageUrl = '@Url.Content("~/res/icon/information.png")';
        return '<a class="action-btn view" href="javascript:;"><img class="f-grid-cell-icon" src="' + imageUrl + '"></a>';
    }

    function renderActionPassword(value, params) {
        var imageUrl = '@Url.Content("~/res/icon/key.png")';
        var disabledCls = coreUserChangePassword ? '' : ' f-state-disabled';
        return '<a class="action-btn password'+ disabledCls +'" href="javascript:;"><img class="f-grid-cell-icon" src="' + imageUrl + '"></a>';
    }

    function renderActionEdit(value, params) {
        var imageUrl = '@Url.Content("~/res/icon/pencil.png")';
        var disabledCls = coreUserEdit ? '' : ' f-state-disabled';
        return '<a class="action-btn edit'+ disabledCls +'" href="javascript:;"><img class="f-grid-cell-icon" src="' + imageUrl + '"></a>';
    }

    function renderActionDelete(value, params) {
        var imageUrl = '@Url.Content("~/res/icon/delete.png")';
        var disabledCls = coreUserDelete ? '' : ' f-state-disabled';
        return '<a class="action-btn delete'+ disabledCls +'" href="javascript:;"><img class="f-grid-cell-icon" src="' + imageUrl + '"></a>';
    }

    function onDeleteSelectedClick(event) {
        var grid1 = F.ui.Grid1;

        if (!grid1.hasSelection()) {
            F.alert('请至少选择一项！');
            return;
        }

        var selectedRows = grid1.getSelectedRows();
        F.confirm({
            message: '你确定要删除选中的&nbsp;<b>' + selectedRows.length + '</b>&nbsp;行数据吗？',
            target: '_top',
            ok: function () {
                // 触发后台事件
                F.doPostBack('@Url.Action("UserList_DoPostBack")', 'Panel1', {
                    actionType: 'delete',
                    deletedRowIDs: selectedRows
                });
            }
        });
    }

    function onEnableUsersClick(event) {
        var grid1 = F.ui.Grid1;

        if (!grid1.hasSelection()) {
            F.alert('请至少选择一项！');
            return;
        }

        var selectedRows = grid1.getSelectedRows();
        F.confirm({
            message: '你确定要启用选中的&nbsp;<b>' + selectedRows.length + '</b>&nbsp;行数据吗？',
            target: '_top',
            ok: function () {
                // 触发后台事件
                F.doPostBack('@Url.Action("UserList_DoPostBack")', 'Panel1', {
                        actionType: 'enable',
                        deletedRowIDs: selectedRows
                    });
                }
            });
        }

        function onDisableUsersClick(event) {
            var grid1 = F.ui.Grid1;

            if (!grid1.hasSelection()) {
                F.alert('请至少选择一项！');
                return;
            }

            var selectedRows = grid1.getSelectedRows();
            F.confirm({
                message: '你确定要禁用选中的&nbsp;<b>' + selectedRows.length + '</b>&nbsp;行数据吗？',
                target: '_top',
                ok: function () {
                    // 触发后台事件
                    F.doPostBack('@Url.Action("UserList_DoPostBack")', 'Panel1', {
                        actionType: 'disable',
                        deletedRowIDs: selectedRows
                    });
                }
            });
        };

    //function GridConfig() {
    //    var gird = F.ui.Grid1;
    //    var ret = {
    //        "fields": gird.fields,
    //        "IsPaging": gird.paging,
    //        "IsSorting": gird.sorting,
    //        "PageSize": gird.pageSize,
    //        "PageIndex": gird.pageIndex,
    //        "SortField": gird.sortField,
    //        "SortDirection": gird.sortDirection
    //    };
    //    return F.toJSON(ret);
    //};

        F.ready(function () {

            var grid1 = F.ui.Grid1;
            grid1.el.on('click', 'a.action-btn', function (event) {
                var cnode = $(this);
                var rowData = grid1.getRowData(cnode.closest('.f-grid-row'));

                // 是否禁用
                if(cnode.hasClass('f-state-disabled')) {
                    return;
                }

                if (cnode.hasClass('delete')) {
                    F.confirm({
                        message: '确定删除此记录？',
                        target: '_top',
                        ok: function () {
                            // 触发后台事件
                            F.doPostBack('@Url.Action("UserList_DoPostBack")', 'Panel1', {
                            actionType: 'delete',
                            deletedRowIDs: [rowData.id]
                        });
                    }
                });
            } else if (cnode.hasClass('edit')) {
                F.ui.Window1.show('@Url.Content("~/Admin/UserEdit?id=")' + rowData.id, '编辑');
            } else if (cnode.hasClass('view')) {
                F.ui.Window1.show('@Url.Content("~/Admin/UserView?id=")' + rowData.id, '查看');
            } else if (cnode.hasClass('password')) {
                F.ui.Window1.show('@Url.Content("~/Admin/UserChangePassword?id=")' + rowData.id, '修改密码');
            }
        });

    });

    </script>
}