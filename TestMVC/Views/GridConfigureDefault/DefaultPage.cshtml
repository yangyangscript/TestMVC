@{                       
    var F = @Html.F();
}     
                               
@model List<TestMVC.ViewModel.GridConfig>

@section body
{
    @(
    F.Grid().ID("Grid1").IsViewPort(true).DataIDField("Name")
          .Toolbars(F.Toolbar().Items(
              F.Button().Text("显示内容").OnClick(Url.Action("ShowOnClick"), "hfData"))
              )
          .Columns(
              F.RenderCheckFieldFor(s=>s.IsExport).Width(150).TextAlign(TextAlign.Center).RenderAsStaticField(true),
              F.RenderFieldFor(s=>s.Title).ExpandUnusedSpace(true).TextAlign(TextAlign.Center),
              F.RenderField().EnableHeaderMenu(false).EnableColumnHide(false).RendererFunction("renderFir").Width(50),
              F.RenderField().EnableHeaderMenu(false).EnableColumnHide(false).RendererFunction("renderSec").Width(50),
              F.RenderField().EnableHeaderMenu(false).EnableColumnHide(false).RendererFunction("renderThrid").Width(50)
          )
          .DataSource(ViewData.Model)
          )

    @(F.HiddenField().ID("hfData").Text(Newtonsoft.Json.JsonConvert.SerializeObject(ViewData.Model)))
}        


@section script
{


    <script src="~/res/js/Tools.js"></script>
    <script>
        function renderFir(value, params) {
            return renderAction("up", "前移");
        };

        function renderSec() {
            return renderAction("down", "后移");
        };

        function renderThrid() {
            return renderAction("change", "状态变更");
        };


        function BindGirdClick() {
           
            var gridItem = F.ui.Grid1;
            gridItem.el.on('click',
                'a.action-btn',
                function(event) {
                    var cnode = $(this);
                    var rowData = gridItem.getRowData(cnode.closest('.f-grid-row'));
                    var pStatus = 0;
                    if (cnode.hasClass('up')) {
                        pStatus = 1;

                    } else if (cnode.hasClass('down')) {
                        pStatus = 2;

                    } else if (cnode.hasClass('change')) {
                        pStatus = 3;
                    };
                    @*F.doPostBack({
                        url: '@Url.Action("ChangeItems")',
                        fields: 'hfData',
                        params: {
                            "name": Id,
                            "status": pStatus,
                            "rowIndex": rowIndex
                        },
                        complete: function() {
                            alert("complete");
                            BindGirdClick();
                        }
                    });*@
                    F.doPostBack('@Url.Action("ChangeItems")',
                        "hfData",
                        {
                            "name": rowData.id,
                            "status": pStatus,
                            "rowIndex": rowData.index
                        });
                });
        }

        F.ready(function () {          
            BindGirdClick();
        });

    </script>
}
